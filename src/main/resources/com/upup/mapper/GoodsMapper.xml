<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.upup.basics.mapper.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.upup.basics.model.Goods" >
    <constructor >
      <idArg column="UUID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="NAME" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ORIGIN" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="PRODUCER" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="UNIT" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="INPRICE" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="OUTPRICE" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="GOODSTYPEUUID" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    UUID, NAME, ORIGIN, PRODUCER, UNIT, INPRICE, OUTPRICE, GOODSTYPEUUID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where UUID = #{uuid,jdbcType=INTEGER}
  </select>
    <select id="queryAllGoods" resultType="java.util.Map">
      select g.uuid,g.name, g.origin,g.producer,g.UNIT,g.INPRICE,g.OUTPRICE ,
      gt.`NAME` GOODSTYPEUUID from goods g,goodstype gt where g.GOODSTYPEUUID=gt.UUID
      <if test="null!=name and ''!=name">
        and name like concat('%',#{name},'%')
      </if>
      <if test="null!=origin and ''!=origin">
        and origin like concat('%',#{origin},'%')
      </if>
      <if test="null!=producer and ''!=producer">
        and producer like concat('%',#{producer},'%')
      </if>
    </select>
  <select id="queryGoodsPager" resultType="java.util.Map">

    select * from
    ( select g.uuid,g.name ,g.origin,g.producer,g.unit,g.inprice, g.outprice,g.goodstypeuuid as goodstypeuuid ,
    t.name as goodstypename from goods g,goodstype t where g.goodstypeuuid=t.uuid
    <if test="null!=name and ''!=name">
      and g.name like concat('%',#{name},'%')
    </if>
    <if test="null!=origin and ''!=origin">
      and g.origin like concat('%',#{origin},'%')
    </if>
    <if test="null!=producer and ''!=producer">
      and g.producer like concat('%',#{producer},'%')
    </if>
    <if test="null!=goodstypeuuid and ''!=goodstypeuuid">
      and g.goodstypeuuid = #{goodstypeuuid}
    </if>
    ) as a
     order by uuid desc
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where UUID = #{uuid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.upup.basics.model.Goods" >
    insert into goods (NAME, ORIGIN,
      PRODUCER, UNIT, INPRICE, 
      OUTPRICE, GOODSTYPEUUID)
    values (#{name,jdbcType=VARCHAR}, #{origin,jdbcType=VARCHAR},
      #{producer,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{inprice,jdbcType=REAL},
      #{outprice,jdbcType=REAL}, #{goodstypeuuid,jdbcType=INTEGER})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.upup.basics.model.Goods" >
    update goods
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="origin != null" >
        ORIGIN = #{origin,jdbcType=VARCHAR},
      </if>
      <if test="producer != null" >
        PRODUCER = #{producer,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        UNIT = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="inprice != null" >
        INPRICE = #{inprice,jdbcType=REAL},
      </if>
      <if test="outprice != null" >
        OUTPRICE = #{outprice,jdbcType=REAL},
      </if>
      <if test="goodstypeuuid != null" >
        GOODSTYPEUUID = #{goodstypeuuid,jdbcType=INTEGER},
      </if>
    </set>
    where UUID = #{uuid,jdbcType=INTEGER}
  </update>

</mapper>